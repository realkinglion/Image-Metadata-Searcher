画像メタ情報検索くん v5.1 Final 取扱説明書（完全版）
📖 1. はじめに
この度は、「画像メタ情報検索くん v5.1 Final」をご利用いただき、誠にありがとうございます。
本アプリケーションは、AI生成画像のプロンプト（画像を作るための「呪文」や「命令文」）をもとに、膨大な画像コレクションから目的の画像を瞬時に検索できる高性能ツールです。
🆕 v5.1 Finalの主要な進化

SQLiteデータベースによる高速キャッシュシステム
並列処理によるサムネイル生成の劇的高速化
予測キャッシングでページ移動が瞬間的に
NovelAI専用機能で生成画像を素早く抽出
リアルタイム監視で新規ファイルを自動検出
階層化プロンプト対応で複雑な構造にも対応


⚠️ セキュリティとご注意事項
🚨 重要：ダウンロード前に必ずお読みください
信頼性の確保

信頼できる配布元からのみダウンロードしてください
ダウンロード後、ウイルス対策ソフトで事前スキャンすることを強く推奨
.exeファイルや.batファイルは、悪意のあるプログラムにも使われることがあります
怪しいと感じたら、使用を中止してください

データ保護

重要な画像ファイルは事前にバックアップを取ることを推奨
移動機能使用時は元ファイルが削除されます
検索対象フォルダの読み書き権限を確認してください


📋 2. システム要件（v5.1版）
基本要件

OS: Windows 10/11 推奨（Windows 8.1以降で動作）
Python: 3.8以降必須（3.9以降強く推奨）
メモリ: 8GB以上推奨（4GB最小、大量画像処理時は16GB推奨）
ディスク容量: 500MB以上の空き容量（キャッシュDB用）
権限: 通常のユーザー権限（管理者権限不要）

推奨環境

CPU: 4コア以上（並列処理最適化のため）
ストレージ: SSD推奨（データベースアクセス高速化）
ネットワーク: ローカルファイル推奨（ネットワークドライブは性能低下）

新規依存関係

Pillow-SIMD: 画像処理の高速化（通常のPillowでも動作）
watchdog: リアルタイムファイル監視
exifread: EXIFメタデータ読み取り


🚀 3. 導入と準備
🎯 簡単導入コース（推奨）
すぐに使いたい方向け

「画像メタ情報検索くん_v5.1.exe」をダブルクリック
Windows Defenderの警告が表示された場合：

「詳細情報」→「実行」をクリック
初回のみの確認です



🔧 手動導入コース（推奨）
セキュリティ重視・カスタマイズ希望の方向け
Step 1: Pythonのインストール

Python公式サイトからPython 3.9以降をダウンロード
インストール時に必ず「Add Python to PATH」にチェックを入れる
⚠️ 重要: このチェックを忘れると起動できません
インストール完了後、コマンドプロンプトで確認：
cmdpython --version


Step 2: ファイルの配置
デスクトップなど分かりやすい場所に新しいフォルダを作成（例：「画像検索アプリv5」）し、以下のファイルを配置：

config.py、controller.py、main.py、model.py、view.py
install_v5.bat（初回セットアップ用）
run_search_app_v5.bat（起動用）

Step 3: セットアップスクリプトの作成
install_v5.bat の内容：

@echo off
echo 画像メタ情報検索くん v5.1 Final セットアップ
echo ==========================================
echo 必要なライブラリをインストールします...
echo.

pip install --upgrade pip

echo Pillow-SIMDをインストールしています...
pip install Pillow-SIMD>=9.0.0
if %errorlevel% neq 0 (
    echo.
    echo Pillow-SIMDのインストールに失敗しました。
    echo 通常のPillowをインストールします...
    pip install Pillow>=9.0.0
)

echo ExifReadをインストールしています...
pip install exifread>=3.0.0

echo Watchdogをインストールしています...
pip install watchdog>=2.1.0

echo.
echo ==========================================
echo インストール完了！
echo 今後は run_search_app_v5.bat で起動できます。
echo ==========================================
pause

run_search_app_v5.bat の内容：

@echo off
title 画像メタ情報検索くん v5.1 Final
echo 画像メタ情報検索くん v5.1 Finalを起動しています...
echo.

python main.py

if %errorlevel% neq 0 (
    echo.
    echo ==========================================
    echo エラーが発生しました。
    echo.
    echo 考えられる原因：
    echo - Python または必要なライブラリが不足
    echo - install_v5.bat を実行していない
    echo - Python PATH設定の問題
    echo.
    echo install_v5.bat を実行してください。
    echo ==========================================
    pause
)
Step 4: 初回セットアップ

install_v5.bat をダブルクリックして実行
黒い画面でインストールが自動実行される
エラーが表示された場合は、トラブルシューティングを参照


🔄 4. v2.0からの移行ガイド
既にv2.0をお使いの方向けの詳細移行手順です。
移行前の準備
1. 既存データのバックアップ
古いフォルダから以下をコピー：
- search_history.json （検索履歴）
- favorites.json （お気に入り設定）
- metadata_cache.json （参考用、v5.1では使用されません）
2. 設定の記録

現在の検索対象フォルダのパス
よく使用するキーワード
表示設定（ソート方法、表示件数等）

移行手順
Step 1: v5.1の新規インストール

既存のv2.0とは別の新しいフォルダにv5.1を配置
install_v5.bat を実行して依存関係を更新

Step 2: 初回起動時の重要な注意
⚠️ 非常に重要: 初回は全ファイルの再スキャンが必要

metadata_cache.json → metadata_cache.db への変換のため
大量ファイルの場合、数時間かかる可能性があります
進捗表示を確認しながら完了まで待機してください
この間、他の作業を行うことは可能です

Step 3: 設定の復元

既存の search_history.json と favorites.json をv5.1フォルダにコピー
アプリケーションを再起動
お気に入り設定を確認・調整

移行後の確認事項
パフォーマンスの体感

サムネイル表示が劇的に高速化されているか
検索結果の即座表示
ページ移動が瞬間的になっているか

新機能の動作確認

NovelAI画像表示機能の動作
右クリックメニューの拡張機能
リアルタイム監視の動作


🖥️ 5. 基本的な使い方
📱 5.1 画面の構成（v5.1版）
左側エリア：検索設定

検索対象フォルダ指定
キーワード入力
検索オプション設定

中央エリア：機能・操作

検索履歴の管理
ファイル操作（コピー・移動）
NovelAI専用機能

右側エリア：表示・ソート設定

結果のソート方法
表示件数設定
ページネーション機能

下半分：検索結果エリア

サムネイル一覧表示
高速スクロール対応
右クリックメニュー

🔍 5.2 検索の基本手順
手順1：検索対象フォルダを指定

「フォルダ選択」ボタンをクリック
画像が保存されているフォルダを選択
選択後、リアルタイム監視が自動開始されます

手順2：検索キーワードを入力
プロンプト例：

1girl - 女の子が描かれた画像
blue hair - 青い髪の画像
cat ears - 猫耳の画像
masterpiece, best quality - 高品質指定
school uniform - 制服

手順3：検索オプションを設定

AND検索: すべてのキーワードを含む画像のみ
OR検索: いずれかのキーワードを含む画像
一部一致/完全一致: 検索の厳密さを調整
ネガティブ含む: ネガティブプロンプトも検索対象に
サブフォルダも検索: 子フォルダ内も検索

手順4：検索実行

青い「検索スタート」ボタンをクリック
または、キーワード入力欄で Enterキー
進行中は「キャンセル」ボタンで中断可能

🖱️ 5.3 検索結果の操作（拡張版）
サムネイル操作

左クリック: チェックボックスの切り替え
ダブルクリック: 画像の拡大表示
右クリック: 詳細メニュー表示

画像選択

単一選択: サムネイルを1回クリック
全選択: 「すべて選択」ボタン
選択解除: 「すべて解除」ボタン
範囲選択: Shift+クリック（今後実装予定）

ページ操作

前/次ページ: 「前」「次」ボタン
直接移動: ページ番号入力 → 「ページ移動」ボタン
ページ情報: 「ページ X/Y (Z件)」形式で表示

高速ナビゲーション

予測キャッシング: 次ページが瞬間表示
スムーズスクロール: マウスホイール対応
キーボードナビゲーション: 矢印キーでページ移動


🎨 6. 新機能詳細ガイド
🤖 6.1 NovelAI専用機能
フォルダ内のNovelAI生成画像を素早く表示する専用機能です。
使用方法

**「最新NAI画像表示件数」**で表示数を設定（デフォルト: 10件）
**「最新NovelAI画像表示」**ボタンをクリック
最新順でNovelAI画像が自動表示されます

特徴

メタデータからNovelAI画像を自動識別
生成日時順での自動ソート
大量ファイル中からの高速抽出
SQLiteデータベースによる効率的検索

活用シーン

最近生成した画像の確認
NovelAI作品のまとめ表示
生成履歴の時系列確認

⚡ 6.2 予測キャッシング機能
次のページの画像を事前に読み込み、ページ移動を瞬間的にする機能。
動作原理

現在表示中のページを確認
次ページの画像をバックグラウンドで事前読み込み
WebP形式で効率的にキャッシュ保存
ページ移動時に即座表示（0.1秒未満）

効果

ページ移動が瞬間的になる
待ち時間なしの快適なブラウジング
メモリ効率的なキャッシュ管理

設定

デフォルトで有効
設定ファイル（app_config.json）で無効化可能
メモリ使用量との調整可能

👁️ 6.3 リアルタイムファイル監視
検索実行中に新しく追加された画像を自動的に検索結果に反映する機能。
動作条件

検索対象フォルダへの新ファイル追加
検索条件に合致するファイル
サポート形式（.jpg, .png, .webp, .tiff）

監視範囲

「サブフォルダも検索」設定に準拠
指定フォルダとその配下を監視
ファイル作成イベントを即座検出

利点

手動更新不要
リアルタイム性
作業効率向上

注意事項

大量ファイル同時追加時は一時的に重くなる可能性
ネットワークドライブでは監視精度が低下する場合があります

🎯 6.4 高度なプロンプト処理
v4形式の階層化プロンプト構造に完全対応。
対応形式
1. Automatic1111形式
1girl, blue hair, school uniform
Negative prompt: low quality, blurry
2. ComfyUI/NovelAI形式
json{"prompt": "...", "negative_prompt": "..."}
3. v4形式（階層化）
json{
  "v4_prompt": {
    "caption": {
      "base_caption": "2girls, outdoor, sunset",
      "char_captions": [
        {"char_caption": "girl1, blue hair, uniform, smile"},
        {"char_caption": "girl2, red hair, casual, serious"}
      ]
    }
  }
}
個別抽出機能

ベースプロンプト: 画像全体の基本説明
キャラクタープロンプト: 個別キャラクターの詳細
ネガティブプロンプト: 除外要素の指定
プレビュー表示: 最初の15文字+省略記号


🖱️ 7. 高度な操作
⌨️ 7.1 キーボードショートカット
検索操作

Enter: 検索キーワード入力欄で検索実行
Escape: 進行中の検索をキャンセル（今後実装予定）
Ctrl + F: キーワード入力欄にフォーカス（今後実装予定）

画像ビューア

←→ 矢印キー: 前後の画像に移動
Ctrl + Plus(+): 画像拡大
Ctrl + Minus(-): 画像縮小
Ctrl + 0: 画面に合わせて表示
スペースキー: 次の画像（今後実装予定）

ページナビゲーション

Page Up/Down: ページ移動（今後実装予定）
Home/End: 最初/最後のページ（今後実装予定）

🖱️ 7.2 右クリックメニュー完全ガイド
画像のサムネイルを右クリックで表示される高度な機能メニュー：
📋 プロンプト関連機能
1. ベースプロンプト操作

ベースプロンプトをコピー: 画像全体の基本説明をクリップボードに
使用例: シーン、構図、全体的な雰囲気

2. キャラクタープロンプト操作

キャラクター別プロンプト: 個別キャラクターの詳細説明
プレビュー表示: 「キャラ1: blue hair, schoo...」形式
複数キャラ対応: キャラ1、キャラ2...として個別管理

3. ネガティブプロンプト操作

ベースネガティブ: 全体的な除外指示
キャラクターネガティブ: 個別の除外指示

📄 ファイル操作機能

メタ情報表示: 詳細なメタデータを別ウィンドウで確認
ファイル名コピー: ファイル名をクリップボードに
名前変更: ファイルのリネーム（即座反映）
フォルダを開く: エクスプローラーで位置を表示

📊 便利機能

全ファイル選択: 現在ページの全画像を選択
全選択解除: すべての選択を解除

📁 7.3 ファイル操作詳細
コピー・移動の手順

対象画像を選択（複数選択可能）
**「保存先選択」**で移動先フォルダを指定
**「コピー」または「移動」**ボタンを実行

注意事項

移動は元ファイルが削除されます
重要なファイルはコピーを推奨
同名ファイルは上書きされます
権限エラーが発生した場合は管理者権限で実行


🛠️ 8. トラブルシューティング（v5.1対応版）
❌ 8.1 インストール関連のトラブル
Pillow-SIMDのインストールエラー
症状: Could not build wheels for Pillow-SIMD または類似のコンパイルエラー
原因:

C/C++コンパイラーの不足
開発ツールの未インストール
アーキテクチャの非対応

対処法（段階的）:

通常のPillowで代替:
cmdpip uninstall Pillow-SIMD
pip install Pillow>=9.0.0

conda環境での解決:
cmdconda install pillow-simd -c conda-forge

Windowsでの開発環境整備:

Visual Studio Build Tools のインストール
Microsoft C++ Build Tools


macOSでの対応:

Xcode Command Line Tools のインストール
Homebrew経由でのインストール



watchdogライブラリエラー
症状: watchdog installation failed エラー
対処法:

手動インストール:
cmdpip install watchdog>=2.1.0

機能無効化（緊急時）:

監視機能を無効化して基本機能のみ使用



❌ 8.2 SQLiteデータベース関連のトラブル
'database is locked' エラー
症状: アプリケーション起動時や検索時にデータベースロックエラー
原因:

アプリケーションの不正終了
複数インスタンスの同時実行
ウイルス対策ソフトによるファイルロック

対処法:

アプリケーションの完全終了確認
タスクマネージャーでプロセス確認・終了
metadata_cache.dbファイルを削除（キャッシュ再構築）
ウイルス対策ソフトの例外設定追加

'disk I/O error' エラー
症状: データベース読み書き時のI/Oエラー
原因:

ディスク容量不足
ハードディスクの障害
権限不足

対処法:

ディスク容量の確認・確保
ディスクエラーチェックの実行
管理者権限での実行
別のドライブへの移動

❌ 8.3 メモリ・パフォーマンス関連のトラブル
メモリ不足エラー
症状: 大量画像処理中にアプリケーションが停止・クラッシュ
原因:

予測キャッシングの過度な使用
並列処理数の過多
システムメモリの不足

対処法（段階的）:

表示設定の調整:

「最大表示件数」を20以下に減少
NovelAI表示件数を5以下に設定


設定ファイルでの調整（app_config.json）:
json{
  "enable_predictive_caching": false,
  "memory_cache_size": 1000,
  "thread_pool_size": 2,
  "max_thumbnails_memory": 100
}

システム環境の最適化:

他のアプリケーションの終了
仮想メモリの増加
物理メモリの増設



並列処理エラー・不安定な動作
症状: 検索中にプログレスバーが停止、応答なし
対処法:

キャンセル機能の使用:

「キャンセル」ボタンをクリック
30秒程度待機してからアプリ再起動


設定調整:
json{
  "thread_pool_size": 2,
  "display_batch_size": 10,
  "large_search_warning_threshold": 5000
}


❌ 8.4 ファイルアクセス関連のトラブル
Permission denied エラー
症状: ファイルアクセス時の権限エラー
対処法:

ファイル使用状況の確認:

画像編集ソフトの終了
ファイルエクスプローラーの該当フォルダを閉じる


ウイルス対策ソフトの設定:

リアルタイムスキャンの例外設定
検索対象フォルダを除外対象に追加


管理者権限での実行


⚙️ 9. 設定リファレンス
📄 9.1 app_config.json 詳細設定
設定ファイルの各パラメータの詳細説明：
json{
  "thumbnail_size": [200, 200],
  "max_display_items": 50,
  "window_geometry": "1600x900",
  "viewer_geometry": "1200x800",
  "max_thumbnails_memory": 200,
  "thread_pool_size": 4,
  "display_batch_size": 20,
  "large_search_warning_threshold": 20000,
  "enable_predictive_caching": true,
  "predictive_pages": 1,
  "memory_cache_size": 2000,
  "enable_thumbnail_caching": true,
  "supported_formats": [".jpg", ".jpeg", ".png", ".tiff", ".webp"],
  "config_file": "app_config.json"
}
パフォーマンス調整パラメータ
thumbnail_size: サムネイルサイズ（ピクセル）

デフォルト: [200, 200]
小さくすると：メモリ節約、表示高速化
大きくすると：高品質表示、メモリ消費増

thread_pool_size: 並列処理スレッド数

デフォルト: CPUコア数
推奨値: CPUコア数の半分〜同数
多すぎると：メモリ不足、システム不安定
少なすぎると：処理速度低下

memory_cache_size: メモリキャッシュサイズ

デフォルト: 2000
大きくすると：高速化、メモリ消費増
小さくすると：メモリ節約、再読み込み増

📊 9.2 パフォーマンスチューニングガイド
低スペック環境向け設定
json{
  "max_display_items": 20,
  "thread_pool_size": 2,
  "enable_predictive_caching": false,
  "memory_cache_size": 500,
  "max_thumbnails_memory": 50
}
高性能環境向け設定
json{
  "max_display_items": 100,
  "thread_pool_size": 8,
  "enable_predictive_caching": true,
  "predictive_pages": 2,
  "memory_cache_size": 5000,
  "max_thumbnails_memory": 500
}

❓ 10. FAQ（よくある質問）
Q1: v2.0からv5.1への移行時間はどのくらいかかりますか？
A: ファイル数によって大きく異なります：

1,000枚程度：5-10分
10,000枚程度：30分-1時間
100,000枚以上：数時間

初回は全ファイルをSQLiteデータベースに変換するため時間がかかりますが、2回目以降は高速になります。
Q2: Pillow-SIMDがインストールできません
A: 通常のPillowで代替可能です：
cmdpip uninstall Pillow-SIMD
pip install Pillow>=9.0.0
機能に差はありません。Pillow-SIMDは処理速度の最適化のみです。
Q3: メモリ使用量が多すぎます
A: 以下の設定で軽量化できます：

最大表示件数を20以下に設定
予測キャッシングを無効化
スレッド数を2に削減

Q4: NovelAI以外のAI画像も検索できますか？
A: はい、以下のAIツールに対応：

Stable Diffusion (Automatic1111)
ComfyUI
Midjourney（一部）
その他EXIF/メタデータを含む画像

Q5: ネットワークドライブの画像も検索できますか？
A: 可能ですが、以下の制限があります：

処理速度の低下
リアルタイム監視の精度低下
ネットワーク切断時のエラー

ローカルドライブの使用を推奨します。
Q6: 検索が途中で止まってしまいます
A: 以下を確認してください：

キャンセルボタンをクリック
アプリケーションを再起動
大量ファイル警告の閾値を下げる
並列処理数を減らす

Q7: 古いキャッシュファイルは削除しても大丈夫ですか？
A: はい、以下のファイルは削除可能です：

metadata_cache.json（v2.0用、不要）
metadata_cache.db（削除すると再構築が必要）

検索履歴は search_history.json に保存されているので、こちらは保持してください。

📝 11. 更新履歴とライセンス
🔄 バージョン履歴
v5.1 Final（現在）

SQLiteデータベース実装
並列処理システム
予測キャッシング機能
NovelAI専用機能
リアルタイムファイル監視
階層化プロンプト対応
WebPサムネイルキャッシュ

v2.0

基本的な検索機能
JSONキャッシュシステム
シンプルなUI

v1.x

初期版

📊 パフォーマンス比較（v2.0 → v5.1）

初回サムネイル生成: 50-70%高速化
再表示速度: 90%高速化
検索処理: 30-50%高速化
メモリ効率: 40-60%改善

🙏 クレジット
このアプリケーションは以下のオープンソースライブラリを使用：

Python - プログラミング言語
Tkinter - GUI フレームワーク
Pillow/Pillow-SIMD - 画像処理ライブラリ
ExifRead - EXIFメタデータ読み取り
watchdog - ファイルシステム監視
SQLite - データベースエンジン


🎉 おわりに
画像メタ情報検索くん v5.1 Final は、AI画像生成時代に最適化された高性能検索ツールです。
膨大な画像コレクションの中から、プロンプト（呪文）を手がかりに瞬時に目的の画像を見つけ出し、あなたの創作活動を強力にサポートします。
新機能を活用して、より効率的で快適な画像管理をお楽しみください！

📅 最終更新: 2025年6月8日
📖 バージョン: 5.1 Final
✍️ 文書バージョン: v5.1.0

このソフトウェアは個人利用・商用利用ともに無料です。
問題や要望がございましたら、配布元までお気軽にお知らせください。
